service:
  name: todo-app-serverless-jim

plugins:
  - serverless-webpack
  - serverless-aws-documentation
  - serverless-reqvalidator-plugin

provider:
  name: aws
  runtime: nodejs8.10

  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}

  environment:
    TODOS_TABLE: Todos-${self:provider.stage} 
    INDEX_NAME: Todos-lsi

    AUTH_0_SECRET: '-----BEGIN CERTIFICATE-----
MIIDBTCCAe2gAwIBAgIJBA/Md6StcerVMA0GCSqGSIb3DQEBCwUAMCAxHjAcBgNV
BAMTFXpoYW5neWFvaHVhLmF1dGgwLmNvbTAeFw0xOTEwMTUwNTA4MDRaFw0zMzA2
MjMwNTA4MDRaMCAxHjAcBgNVBAMTFXpoYW5neWFvaHVhLmF1dGgwLmNvbTCCASIw
DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAM8fOMGkuyYuZQa7Ui0KumfKbC5D
Trjd4zZtS3j+O7m7jtjzcS9filqTuXzL3knF9gT4Bv2Lx/xGa9pvtRG0RwmV3L2u
wh6XnOUGMJM83RJPyJT/YwMWzWPAxXFnElIpFm/oF4hXu5CjKWuazSJ0bUiCNV5V
B1sugVMWFWQll8VA2DTZBMX8aQKNpSR/pomsMGUm/nmLAMNrU8LoOsET13XA8A9O
5Va+o5d8g3GxxYyYfZxQy0HbZWgsiXTli8rL4OGx3Bm+xtrj1K6U0C1iW1+q3NrH
XcaIkDHGNLJk6+BwMF4CAVPi836xmAcvTnVgr8u8PX3clxWE2u5VvyoeSYMCAwEA
AaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUyhCCoUy7iw42AU9cFO/r
Vib7Q70wDgYDVR0PAQH/BAQDAgKEMA0GCSqGSIb3DQEBCwUAA4IBAQCByemKd8bC
RJlWxVpqW2xxpX08bmov3WTRN3Ldd811euPojz4smTuVVfk0SyWyIRByhOpEFLTj
S7UTySGyC/twTyhnsLy+KVsp5kwwhzNDUxrParq9M+VEa2za/8SfUop9q3m+UCCl
94jCa+TtGesZb6GfYyp82Vsak5pGDf9YKgMRYxEX7qUJoGVPXwh5dXFF4j0xqhjx
woWVGK2VUJ8apdvQNhaOyWE11ypFzjhBwVqum5HV74wy/WJ+ax/zgtUyXcG9Hevc
9TuFltD9hHA1+VyF/19n0hWRzDDeSp03u1wKszEYpMSll71aiACyaXAEhkWf6cFK
ttaxKN9NCKEQ
-----END CERTIFICATE-----'
    
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:PutItem
      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TODOS_TABLE}

custom:
  documentation:
    api:
      version: v1.0.0
      title: Todo API
      description: A productivity tool for ambitious professionals
    models:
      - name: TodoRequest
        contentType: application/json
        schema: ${file(models/create-todo-request.json)}

functions:
  Auth:
    handler: src/lambda/auth/auth0Authorizer.handler

  # TODO: Configure this function
  GetTodos:
    handler: src/lambda/http/getTodos.handler
    events:
      - http:
          method: get
          path: todos
          cors: true
          authorizer: Auth

  CreateTodo:
    handler: src/lambda/http/createTodo.handler
    events:
      - http:
          method: post
          path: todos
          cors: true
          reqValidatorName: RequestBodyValidator
          documentation:
            summary: Create a new todo
            description: Create a new todo
            requestModels:
              'application/json': TodoRequest

resources:
  Resources:

    RequestBodyValidator:
      Type: AWS::ApiGateway::RequestValidator
      Properties:
        Name: 'request-body-validator'
        RestApiId:
          Ref: ApiGatewayRestApi
        ValidateRequestBody: true
        ValidateRequestParameters: false

    GatewayResponseDefault4XX:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
          gatewayresponse.header.Access-Control-Allow-Methods: "'GET,OPTIONS,POST'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: ApiGatewayRestApi

    TodosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: todoId
            AttributeType: S
          - AttributeName: dueDate
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: todoId
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.TODOS_TABLE}
        LocalSecondaryIndexes:
          - IndexName: ${self:provider.environment.INDEX_NAME}
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
              - AttributeName: dueDate
                KeyType: RANGE
            Projection:
              ProjectionType: ALL # What attributes will be copied to an index
    